/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo, useContext, createContext } from "react";
import { useGLTF, Merged } from "@react-three/drei";

const context = createContext();

export function Instances({ children, ...props }) {
  const { nodes } = useGLTF("/17KLogo.glb");
  const instances = useMemo(
    () => ({
      KMinimalVerts: nodes["17KMinimalVerts1"],
      KMinimalVerts1: nodes["17KMinimalVerts7"],
      KMinimalVertsK: nodes["17KMinimalVertsK"],
    }),
    [nodes]
  );

  console.log(instances)

  return (
    <Merged meshes={instances} {...props}>
      {(instances) => (
        <context.Provider value={instances} children={children} />
      )}
    </Merged>
  );
}

export function Logo(props) {
  const instances = useContext(context);
  return (
    <group {...props} dispose={null}>
      <instances.KMinimalVerts />
      <instances.KMinimalVerts1 />
      <instances.KMinimalVertsK />
    </group>
  );
}

useGLTF.preload("/17KLogo.glb");
